name: site

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Download BLT files
        run: |
          wget $(cat urls.txt)
          unzip 'CHttpHandler.ashx*'

        working-directory:
          ./rust/stv/tests/real/data

      - name: Run tests
        run: cargo test --lib --features test_real_stv --features wasm

      - name: Install wasm pack
        run:  curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install sass
        run: npm i -g sass

      - name: Build
        run: |
          wasm-pack build --target web -- --features wasm
          cd webui
          npm ci
          npm run build
          ls dist
          cp -r dist /tmp

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: /tmp/dist/

  # check if other features build, in parallel
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        command:
          - "cargo check --features wasm"
          - |
            mv rust-toolchain.toml.sample rust-toolchain.toml
            RUSTFLAGS='-C target-cpu=native' cargo check --features intrinsics
          - "cargo check --features fma_non_stv"
          - "cargo check --features fma_stv"
          - "cargo check --features progress_bar"
          - "cargo check --features voters_sample"
          - "cargo check --tests"
          - "cargo check --benches"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo check
        run: ${{ matrix.command }}

