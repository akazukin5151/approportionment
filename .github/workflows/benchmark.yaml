name: benchmark

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        p1: [true, false]
        p2: [true, false]
        p3: [true, false]
        p4: [true, false]
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Apply patches
        run: python apply_patches.py
        env:
          p1: ${{ matrix.p1 }}
          p2: ${{ matrix.p2 }}
          p3: ${{ matrix.p3 }}
          p4: ${{ matrix.p4 }}


      - name: Build binaries
        run: |
          echo $(python get_num.py)
          cargo b --release
          mkdir -p output
          mv target/release/approportionment output/approportionment-$(python get_num.py)
        env:
          p1: ${{ matrix.p1 }}
          p2: ${{ matrix.p2 }}
          p3: ${{ matrix.p3 }}
          p4: ${{ matrix.p4 }}

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: output

  benchmark:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        n_voters: [100, 1000, 10000]
        extra_parties: ["True", "False"]
    steps:
      - name: Install hyperfine
        run: |
          wget https://github.com/sharkdp/hyperfine/releases/download/v1.15.0/hyperfine_1.15.0_amd64.deb
          sudo dpkg -i hyperfine_1.15.0_amd64.deb

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: output
          path: output

      - run: ls output

      - name: Run benchmarks
        run: |
          mkdir -p jsons
          export NVOTERS="\(n: Natural) -> $N_VOTERS"
          hyperfine --prepare 'rm -rf out/stv || true' 'output/approportionment-{number} config/stv-profiling.dhall' -L number 1000,0100,0010,0001,1100,1010,1001,0110,0101,0011,1110,1011,1101,0111,0000,1111 --export-json 'jsons/${N_VOTERS}-${EXTRA_PARTIES}.json' --show-output
        env:
          N_VOTERS: ${{ matrix.n_voters }}
          EXTRA_PARTIES: ${{ matrix.extra_parties }}

      - name: Print JSON
        run: cat 'jsons/${N_VOTERS}-${EXTRA_PARTIES}.json'
        env:
          N_VOTERS: ${{ matrix.n_voters }}
          EXTRA_PARTIES: ${{ matrix.extra_parties }}

      - name: Upload JSON
        uses: actions/upload-artifact@v3
        with:
          path: jsons/
          name: jsons
