/* All styles are suitable for small screens, styles for large screens
 * are in media queries */

@media (prefers-color-scheme: light) {
    :root {
        /* Make light background color less bright */
        --bg: #fafafa;
    }
}

body {
    /* simple.css makes the body a grid display; revert this */
    display: initial
}

:root {
    /* The canvas size is > 400px and < 800px. Between those two it
     * resizes itself to be 38% of the screen width. A media query
     * width depends on this, and must be updated if this changes */
    --canvas-size: min(max(38vw, 400px), 800px);
}

h1 {
    /* Reduce the max width of the header to avoid touching the Github corner */
    max-width: 90%;
}

/* Align an element to the center externally and internally */
.center-align {
    margin-left: auto;
    margin-right: auto;
    text-align: center
}

.space-around {
    display: flex;
    justify-content: space-around;
}

.flex-wrap {
    flex-wrap: wrap;
}

/* Container for #chart and the empty-img */
#chart-container {
    margin-left: 20px;
    /* Half margin as config will also have margin-left */
    margin-right: 10px;
}

/* Container for two canvas elements */
.position-absolute {
    /* Overlay the two canvas elements on top of each other */
    position: absolute
}

#config {
    margin-right: 20px;
    /* Half margin as chart will also have margin-left */
    margin-left: 10px;

    /* So that you can scroll a bit lower */
    margin-bottom: 50px;
}

.canvas-size {
    width: var(--canvas-size);
    height: var(--canvas-size);
}

.overlaid-canvas {
    border: 1px solid black;
    /* Overlay two canvas elements on top of each other */
    position: absolute;
    left: 0;
    top: 0;
}

#empty-img {
    width: var(--canvas-size);
    height: var(--canvas-size);
    /* Prevents selections from selecting the image */
    visibility: hidden
}

/* The width is the exact point where the main container wraps, putting the chart
 * and config vertically. Determined experimentally.
 * Depends on --canvas-size and must be updated if that changes
 *
 * There's also a possible bug: Flexbox unwraps at 1170px, so desired width
 * for this media query to take affect at is 1170px, however:
 *
 * Query width | Actually takes affect at
 * ----------- | ------------------------
 * 1169        | 1169
 * 1170        | 1171
 *
 * There is no query width that can give the desired width at 1170
 * */
@media (min-width: 1170px) {
    #chart {
        /* Make the chart (with the two canvases overlaid) sticky on scroll */
        position: sticky;
        top: 20px;
    }
}

/* For tablet sizes and above */
@media (min-width: 720px) {
    /* Move its elements to the left and right edges of this container */
    .space-between-div {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    input[type=number] {
        /* Fix the width of the number input
         * (otherwise it will fill its container) */
        width: 100px;
        margin-left: auto
    }
}

#run-btn {
    /* Make the run button right aligned */
    margin-left: auto;
}

/* Center align interactive elements in the tables
 * (color picker is already center aligned) */
#party-table td:first-child,      /* colorized checkbox */
#party-table td:nth-child(7),     /* coalition dropdown */
#party-table td:nth-child(8),     /* add party button and delete button */
#coalition-table td:nth-child(3) { /* add coalition button */
    text-align: center
}

/* Turn cursor into help cursor when element is hovered */
.help-cursor {
    cursor: help
}

input[type="radio"] {
    /* Increase the size of the radio buttons to make it easier to click */
    -ms-transform: scale(1.5);
    -webkit-transform: scale(1.5);
    transform: scale(1.5);
}

#legend-table, #coalition-table {
    width: initial
}

#legend-container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.display-none {
    display: none;
}

#color-wheel {
    z-index: 0
}

#color-wheel-seats {
    z-index: 1
}

#color-wheel-hover {
    z-index: 2
}

#color-wheel-party {
    z-index: 3
}

/* Dynamically applied in TS */
.wh-200 {
    width: 200px;
    height: 200px;
}

.w-400 {
    width: 400px;
}

.m-b-0 {
    margin-bottom: 0
}

.explainer {
    color: gray;
    padding-left: 35px;
    margin-top: 0;
    line-height: 1.2
}

/* Remove margin added by simple.css */
select {
    margin-bottom: 0
}

.sparkline-label {
    position: relative;
    z-index: 1
}

.sparkline {
    --height: 30px;
    height: var(--height);
    position: absolute;
    background-color: #b0ddb0;
    left: 5px;
    /* Vertically center it */
    top: 50%;
    margin-top: calc(var(--height) / 2 * -1);
}

.p-rel {
    position: relative
}

.c-gray {
    color: gray
}

.c-lightgray {
    color: lightgray
}

.sticky-bottom {
    position: sticky;
    bottom: 0
}
